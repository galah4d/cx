package main

type Item struct {
	w i32
	x i32
	y i32
	z i32
}

func moveMaybeTeleportByValue (box Item) (box Item) {
	var padding i32 = 123
	box.w = 7
	box.x = 11
	box.y = 13
	box.z = 17
}

func moveMaybeTeleportByReference (box *Item) {
	var padding i32 = 123
	(*box).w = 77
	(*box).x = 101
	(*box).y = 103
	(*box).z = 107
}

func main () {
	// second case mentioned in issue #77
	var padding i32
	var pBox *Item
	
	pBox = &Item{
		w: 3,
		x: 5,
		y: 7,
		z: 13}

	test((*pBox).w, 3, "reference to struct literal failed")
	test((*pBox).x, 5, "reference to struct literal failed")
	test((*pBox).y, 7, "reference to struct literal failed")
	test((*pBox).z, 13, "reference to struct literal failed")

	moveMaybeTeleportByReference(pBox)

	test((*pBox).w, 77, "pass by reference failed")
	test((*pBox).x, 101, "pass by reference failed")
	test((*pBox).y, 103, "pass by reference failed")
	test((*pBox).z, 107, "pass by reference failed")

	// as an additional check, implicit dereference should work in struct fields,
	// i.e. (*foo.y) == foo.y
	test(pBox.w, 77, "pass by reference failed")
	test(pBox.x, 101, "pass by reference failed")
	test(pBox.y, 103, "pass by reference failed")
	test(pBox.z, 107, "pass by reference failed")
}
